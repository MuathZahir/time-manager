@typeparam TItem
<div class="form-control-wrapper">

    <select class="form-control-label @Class" @onchange="ChangeHandler">
        @if (ShowDefaultOption)
        {
            <option value="0" hidden>Group</option>
        }
        @foreach (var (id, item) in idDictionary)
        {
            <option value="@id">@Selector(item).ToString()</option>
        }
    </select>
</div>
@code {

    [Parameter] public IList<TItem> Items { get; set; }
    [Parameter] public Func<TItem, object> Selector { get; set; }
    [Parameter] public EventCallback<TItem> ValueChanged { get; set; }
    [Parameter] public bool ShowDefaultOption { get; set; } = true;
    [Parameter] public string Class { get; set; } = "";

    private Dictionary<Guid, TItem> idDictionary;

    protected override void OnInitialized()
    {
        idDictionary = new Dictionary<Guid, TItem>();
        Items.ToList().ForEach(x => idDictionary.Add(Guid.NewGuid(), x));
    }

    private async Task ChangeHandler(ChangeEventArgs args)
    {
        if (idDictionary.TryGetValue(Guid.Parse(args.Value.ToString()), out var selectedItem))
        {
            await ValueChanged.InvokeAsync(selectedItem);
        }
    }
}